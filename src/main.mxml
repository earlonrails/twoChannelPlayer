<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:Player="com.player.*"
         initialize="init();">

  <fx:Script>
    <![CDATA[
      // import standard flash libs
      import flash.display.*;
      import flash.events.*;
      import flash.filters.*;
      import flash.geom.*;
      import flash.net.*;
      import flash.utils.*;
      import flash.external.ExternalInterface;

      import mx.controls.Alert;

      // import custom player components
      import com.player.*;

      // on fully load of the app begin the player
      private function init():void{
        if (ExternalInterface.available){
          try{
            ExternalInterface.addCallback("loadAudioClip", loadAudio);
            ExternalInterface.addCallback("updateChannelLabels", setLabels);
            ExternalInterface.addCallback("getPlayMs", getTrackPosition);
          } catch (error:SecurityError){
             Alert.show("A SecurityError occurred: " + error.message + "\n");
             consoleLog("A SecurityError occurred: " + error.message + "\n");
          } catch (error:Error){
             Alert.show("An Error occurred: " + error.message + "\n");
             consoleLog("An Error occurred: " + error.message + "\n");
          }
          ExternalInterface.call("playerLoaded");
        } else {
          Alert.show("No ExternalInterface");
          consoleLog("No ExternalInterface");
        }
      }

      private function consoleLog(message:String):void {
        if (ExternalInterface.available){
          message = "[FlashMp3Player Log] " + message;
          ExternalInterface.call("console.log", message);
        }
      }

      // public functions
      public function loadAudio(url:String, seekAhead:Number = 0):void{
        mp3Player.seekToSource(url, seekAhead);
      }

      public function setLabels(leftLabel:String, rightLabel:String):void{
        mp3Player.setChannelLabels(leftLabel, rightLabel);
      }

      public function getTrackPosition():Number {
        return mp3Player.getTrackPosition();
      }
    ]]>
  </fx:Script>

	<Player:Mp3Player id="mp3Player" width="100%" top="5"
    source=""
	  autoPlay="true" />

</s:Application>
